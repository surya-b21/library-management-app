networks:
  go:
    driver: bridge

volumes:
  goroot:
  gocache:
  pgdata:

services:
  auth_service:
    # container_name: auth_service
    # build:
    #   context: ./auth
    #   dockerfile: Dockerfile
    image: golang:1.22-alpine
    working_dir: /app/auth
    volumes:
      - .:/app
    command: go run .
    environment:
      - PORT=8080
    ports:
      - 8080:8080
    networks:
      go:
        aliases:
          - auth-service
    depends_on:
      - auth_db

  auth_db:
    image: postgres:16-alpine
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth_db
    ports:
      - 5432:5432
    networks:
      go:
        aliases:
          - auth_db

  book_service:
    # container_name: book_service
    # build:
    #   context: ./auth
    #   dockerfile: Dockerfile
    image: golang:1.22-alpine
    working_dir: /app
    volumes:
      - ./book:/app
    command: go run .
    environment:
      - PORT=8080
    ports:
      - 8081:8080
    networks:
      go:
        aliases:
          - book-service
    depends_on:
      - book_db

  book_db:
    image: postgres:16-alpine
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: book_db
    ports:
      - 5433:5432
    networks:
      go:
        aliases:
          - book_db